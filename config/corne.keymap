/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define Base 0
#define Lower 1
#define Raise 2
#define Funct 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
			label ="Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P      &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp NUHS   &kp TILDE
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp QMARK  &kp ESC
                         &kp LALT  &mo 1  &kp ENTER    &kp SPACE  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
			label = "Lower";
            bindings = <
&kp TAB    &kp SQT    &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp DOT            &kp AMPERSAND  &kp K_CALCULATOR  &kp LBKT              &kp RBKT               &kp PERCENT   &kp BSPC
&kp LSHFT  &kp EXCL   &kp MINUS      &kp PLUS          &kp EQUAL          &kp HASH           &kp PIPE       &kp COLON         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&kp LCTRL  &kp CARET  &kp FSLH       &kp STAR          &kp BACKSLASH      &kp PRINTSCREEN    &kp TILDE      &kp DOLLAR        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT        &kp ESC
                                     &kp LALT          &none              &kp RET            &kp SPACE      &mo 3             &kp LGUI
            >;
        };

        raise_layer {
			label = "Raise";
            bindings = <
&kp TAB    &kp F1  &kp F2   &kp F3    &kp F4   &kp F22    &kp FSLH   &kp N7  &kp N8     &kp N9  &kp MINUS  &kp BSPC
&kp LSHFT  &kp F5  &kp F6   &kp F7    &kp F8   &kp F23    &kp STAR   &kp N4  &kp N5     &kp N6  &kp PLUS   &kp EQUAL
&kp LCTRL  &kp F9  &kp F10  &kp F11   &kp F12  &kp F24    &kp DOT    &kp N1  &kp N2     &kp N3  &kp N0     &kp ESC
                            &kp LALT  &mo 3    &kp RET    &kp SPACE  &trans  &kp LCTRL
            >;
        };

        funct_layer {
			label = "Funct";
            bindings = <
&kp TAB    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &sys_reset         &kp C_VOLUME_UP    &kp K_PREV      &kp K_PLAY_PAUSE  &kp K_NEXT       &none  &kp BSPC
&kp LSHFT  &none         &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN        &kp RIGHT          &kp C_VOLUME_DOWN  &mkp LCLK       &trans	         &mkp RCLK        &none  &kp CAPSLOCK
&kp LCTRL  &none         &trans		 &trans	       &trans	       &trans		  &kp K_MUTE         &trans	     &trans		 &trans		  &none  &kp ESC
                                         &kp LALT      &none           &kp RET            &kp SPACE          &none           &kp LGUI
            >;
        };
    };
};
